@page "/"
@using parlayrunner.Shared.ViewModels
@using parlayrunner.Shared.Models
@inject NavigationManager NavigationManager
@inject HomeViewModel ViewModel

<div class="home-container">
    <div class="sports-scroll">
        @foreach (var sport in ViewModel?.Sports ?? null)
        {
            <div class="sport-item" @onclick='() => NavigationManager.NavigateTo($"/category/{sport.Name}")'>
                <div class="sport-icon">@sport.Icon</div>
                <span>@sport.Name</span>
            </div>
        }
    </div>

    <div class="content-area">

        <div class="featured-banner">
            <div class="banner-content">
                <h2>EC ON HOME TURF</h2>
                <p>PARKEN - 21. - 27. AUGUST</p>
            </div>
        </div>

        <!-- Matches List -->
        <div class="matches-container">
            <h3 class="day-section-title">Today</h3>

            @{
                var groupedMatches = ViewModel?.Matches?
                    .GroupBy(m => m.Time)
                    .OrderBy(g => g.Key);
            }

            @if (groupedMatches != null)
            {
                @foreach (var timeGroup in groupedMatches)
                {
                    <h3 class="section-title">@timeGroup.Key</h3>
                    @foreach (var match in timeGroup)
                    {
                        <div class="match-card">
                            <div class="match-teams">
                                <div class="team">@match.HomeTeam</div>
                                <div class="team">@match.AwayTeam</div>
                            </div>
                            <div class="match-odds">
                                <button class="odd-button @(IsSelected(match, "1") ? "selected" : "")"
                                        @onclick='() => HandleBetSelection(match, "1", match.HomeOdd)'>
                                    <div class="odd-type @(IsSelected(match, "1") ? "selected" : "")">1</div>
                                    <div class="odd-value">@match.HomeOdd</div>
                                </button>
                                <button class="odd-button @(IsSelected(match, "X") ? "selected" : "")"
                                        @onclick='() => HandleBetSelection(match, "X", match.DrawOdd)'>
                                    <div class="odd-type @(IsSelected(match, "X") ? "selected" : "")">X</div>
                                    <div class="odd-value">@match.DrawOdd</div>
                                </button>
                                <button class="odd-button @(IsSelected(match, "2") ? "selected" : "")"
                                        @onclick='() => HandleBetSelection(match, "2", match.AwayOdd)'>
                                    <div class="odd-type @(IsSelected(match, "2") ? "selected" : "")">2</div>
                                    <div class="odd-value">@match.AwayOdd</div>
                                </button>
                                <div class="more-odds">+@match.MoreOdds</div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
</div>

<style>
</style>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Subscribe to bet changes
        ViewModel._parlayService.OnBetsChanged += OnBetsChanged;
    }

    private void OnBetsChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    protected void Dispose(bool disposing)
    {
        if (disposing)
        {
            // Unsubscribe to prevent memory leaks
            ViewModel._parlayService.OnBetsChanged -= OnBetsChanged;
        }
    }

    private void HandleBetSelection(Match match, string betType, string odds)
    {
        if (match.SelectedBetType == betType)
        {
            match.SelectedBetType = null;
            match.SelectedOdds = null;
        }
        else
        {
            match.SelectedBetType = betType;
            match.SelectedOdds = odds;
        }

        ViewModel._parlayService.AddBet(match, match.SelectedBetType, match.SelectedOdds);
    }

    private bool IsSelected(Match match, string betType)
    {
        return match.SelectedBetType == betType;
    }
}