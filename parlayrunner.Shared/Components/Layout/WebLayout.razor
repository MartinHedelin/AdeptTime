@using parlayrunner.Shared.Interfaces
@using parlayrunner.Shared.Services
@inherits LayoutComponentBase
@inject IAuthenticationService AuthService
@inject NavigationManager NavigationManager
@inject TeamSelectionService TeamService

<div class="layout">
    <!-- Left Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <div class="logo">
                <div class="brand-text">
                    <div class="adept">Adept</div>
                    <div class="time">Time</div>
                </div>
            </div>
            <!-- Team Selector -->
            <div class="team-selector-container">
                <TeamSelector OnTeamChanged="HandleTeamChanged" />
            </div>
        </div>
        
        <nav class="sidebar-nav">
            <div class="nav-section">
                <NavLink href="/" class="nav-item" Match="NavLinkMatch.All">
                    <i class="fas fa-home"></i>
                    <span>Dashboard</span>
                </NavLink>
                <NavLink href="/planlaegning" class="nav-item">
                    <i class="fas fa-calendar-alt"></i>
                    <span>Planlaegning</span>
                </NavLink>
                <NavLink href="/sager" class="nav-item">
                    <i class="fas fa-briefcase"></i>
                    <span>Sager</span>
                </NavLink>
                <NavLink href="/kunder" class="nav-item">
                    <i class="fas fa-users"></i>
                    <span>Kunder</span>
                </NavLink>
                <NavLink href="/medarbejdere" class="nav-item">
                    <i class="fas fa-user-tie"></i>
                    <span>Medarbejdere</span>
                </NavLink>
                <NavLink href="/timeoversigt" class="nav-item">
                    <i class="fas fa-clock"></i>
                    <span>Timeoversigt</span>
                </NavLink>
                <NavLink href="/geofence-regler" class="nav-item">
                    <i class="fas fa-map-marker-alt"></i>
                    <span>Geofence regler</span>
                </NavLink>
                <NavLink href="/tilaeg-og-timtyper" class="nav-item">
                    <i class="fas fa-plus-circle"></i>
                    <span>Tilaeg og timtyper</span>
                </NavLink>
            </div>
            
            <!-- Logout Section -->
            <div class="nav-section logout-section">
                <button @onclick="HandleLogout" class="nav-item logout-btn">
                    <i class="fas fa-sign-out-alt"></i>
                    <span>Log out</span>
                </button>
            </div>
        </nav>
    </div>

    <!-- Main Content Area -->
    <div class="main-content">
        <div class="content-wrapper">
            @Body
        </div>
    </div>
</div>

<style>
    .layout {
        display: flex;
        height: 100vh;
        background-color: transparent;
    }

    .sidebar {
        width: 280px;
        background-color: #3F4261;
        color: white;
        display: flex;
        flex-direction: column;
        position: fixed;
        height: 100vh;
        left: 0;
        top: 0;
        z-index: 1000;
    }

    .sidebar-header {
        padding: 20px;
        background-color: #3F4261;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        display: flex;
        flex-direction: column;
        gap: 16px;
    }

    .team-selector-container {
        width: 100%;
    }

    .logo .brand-text {
        font-size: 32px;
        font-weight: 300;
        line-height: 1.2;
        color: white;
    }

    .logo .brand-text .adept {
        font-weight: 400;
        color: white;
    }

    .logo .brand-text .time {
        font-weight: 300;
        color: #8B91B8;
    }

    .sidebar-nav {
        flex: 1;
        padding: 20px 0;
    }

    .nav-section {
        display: flex;
        flex-direction: column;
        gap: 8px;
        padding: 0 20px;
    }

    .nav-item {
        display: flex;
        align-items: center;
        padding: 12px 16px;
        color: #bdc3c7;
        text-decoration: none;
        border-radius: 8px;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .nav-item:hover {
        background-color: rgba(255, 255, 255, 0.1);
        color: white;
        transform: translateX(4px);
    }

    .nav-item.active {
        background-color: rgba(255, 255, 255, 0.15);
        color: white;
    }

    /* Blazor NavLink active class override */
    .nav-item:global(.active) {
        background-color: rgba(255, 255, 255, 0.15) !important;
        color: white !important;
    }

    .nav-item i {
        width: 20px;
        margin-right: 12px;
        font-size: 16px;
        text-align: center;
    }

    .logout-section {
        margin-top: auto;
        padding-top: 20px;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
    }

    .logout-btn {
        background: none;
        border: none;
        width: 100%;
        text-align: left;
        cursor: pointer;
        font-family: inherit;
        font-size: inherit;
    }

    .logout-btn:hover {
        background-color: rgba(255, 255, 255, 0.1);
        color: white;
        transform: translateX(4px);
    }

    .main-content {
        flex: 1;
        margin-left: 280px;
        display: flex;
        flex-direction: column;
    }

    .content-wrapper {
        flex: 1;
        padding: 0;
        overflow-y: auto;
    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .sidebar {
            width: 250px;
            transform: translateX(-100%);
            transition: transform 0.3s ease;
        }

        .sidebar.open {
            transform: translateX(0);
        }

        .main-content {
            margin-left: 0;
        }

        .content-wrapper {
            padding: 0;
        }
    }
</style>

@code {
    private string selectedTeam = "All";

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login", true);
    }

    private Task HandleTeamChanged(string team)
    {
        selectedTeam = team;
        TeamService.SetSelectedTeam(team);
        StateHasChanged();
        return Task.CompletedTask;
    }
} 